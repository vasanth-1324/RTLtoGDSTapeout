RISC-V Reference SoC Tapeout Program (VSD) ‚Äî Week 0: Environment Setup & Tool Installation

Welcome to my journey through the RISC-V Reference SoC Tapeout Program! In Week 0, I focused on setting up the development environment and installing essential open-source tools for RTL synthesis, simulation, and waveform visualization.

üñ•Ô∏è System Configuration
Specification	Details
Operating System	Ubuntu 20.04+
RAM	6‚ÄØGB
Storage	50‚ÄØGB HDD
vCPUs	4
‚öôÔ∏è Tool Installation & Verification
1. Yosys ‚Äî RTL Synthesis Tool

Purpose: Converts Verilog RTL into gate-level representations for synthesis and analysis.

Installation Steps:

git clone https://github.com/YosysHQ/yosys.git
cd yosys
sudo apt install make build-essential clang bison flex \
     libreadline-dev gawk tcl-dev libffi-dev git \
     graphviz xdot pkg-config python3 libboost-system-dev \
     libboost-python-dev libboost-filesystem-dev zlib1g-dev
make
sudo make install


Verification:
Ran yosys --version and confirmed successful installation.

2. Iverilog ‚Äî Verilog Simulator

Purpose: Compiles and simulates Verilog designs for functional verification.

Installation:

sudo apt update
sudo apt install iverilog


Verification:
Compiled and simulated a simple Verilog testbench successfully.

3. GTKWave ‚Äî Waveform Viewer

Purpose: Analyzes and visualizes simulation waveforms for debugging.

Installation:

sudo apt update
sudo apt install gtkwave


Verification:
Opened simulation waveform files generated by Iverilog and verified correct display.

‚úÖ Summary
Tool	Status	Primary Use
Yosys	‚úÖ Installed & Verified	RTL Synthesis
Iverilog	‚úÖ Installed & Verified	Functional Simulation
GTKWave	‚úÖ Installed & Verified	Waveform Visualization
üöÄ Next Steps

With the development environment set up, I am now ready to proceed with RTL design, simulation, and layout tasks in the VLSI System Design program.

Feel free to explore the repository for further details and updates.

Author: K Vasanth
Program: RISC-V Reference SoC Tapeout Program (VSD)
